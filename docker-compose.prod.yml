version: "3.8"

services:
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: temperinho-app-prod
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./storage:/var/www/storage
      - ./.env:/var/www/.env
    networks:
      - temperinho-network
    depends_on:
      - db
      - meilisearch
      - redis

  nginx:
    image: nginx:alpine
    container_name: temperinho-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./:/var/www
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    networks:
      - temperinho-network
    depends_on:
      - app

  db:
    image: postgres:15-alpine
    container_name: temperinho-db-prod
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_DATABASE}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata_prod:/var/lib/postgresql/data
    networks:
      - temperinho-network

  meilisearch:
    image: getmeili/meilisearch:latest
    container_name: temperinho-meili-prod
    restart: unless-stopped
    environment:
      - MEILI_MASTER_KEY=${MEILISEARCH_KEY}
      - MEILI_ENV=production
    volumes:
      - meilidata_prod:/data.ms
    networks:
      - temperinho-network

  redis:
    image: redis:alpine
    container_name: temperinho-redis-prod
    restart: unless-stopped
    networks:
      - temperinho-network

networks:
  temperinho-network:
    driver: bridge

volumes:
  pgdata_prod:
    driver: local
  meilidata_prod:
    driver: local
